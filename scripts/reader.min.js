const PDF_READER_MAIN_URL=URL.createObjectURL(new Blob([`(${pdfjsLibWorker.toString()})()`])),PDF_WORKER_MAIN_URL=URL.createObjectURL(new Blob([`(${pdfWorkerJs.toString()})()`]));function PDFReader(e,t){"use strict";const r=[];let s,n=0;const o=[];let a,i=0,c=0,l=0;const u=(e,t,r,s=!0)=>{if(null!=r&&null!=r&&delete o[r],t.error)t.error(e);else{if(s)throw e;console.error(e.message)}},d=()=>`${(65536*(1+Math.random())|0).toString(32)}`+`-${(65536*(1+Math.random())|0).toString(32)}`+`-${(65536*(1+Math.random())|0).toString(32)}`+`-${(16777216*(1+Math.random())|0).toString(32)}`,f=()=>{++i>=Object.keys(r).length&&(i=0),a=Object.keys(r)[i]};var g=e=>t=>{const s=t.data,a=o[s.return];if(a){if(s.isPageNum){if("error"==s.type)return console.error(s.result),r[e].worker.terminate(),delete r[e],void(Object.keys(r).length<=0&&(u(new Error(s.result),a,s.return,!1),w.close()));n=s.result,r[e].initalized=!0;let t=!0;for(let e=0;e<r.length;e++)if(!r[e].initalized){t=!1;break}return void(t&&(l=Date.now(),a.success&&a.success(s.result),delete o[s.return]))}c++,"error"==s.type&&u(new Error(s.result),a,s.return),delete o[s.return],a.success&&a.success(s.result)}},p=()=>{const e=async e=>{for(let t=0;t<e.url.length;t++)importScripts(e.url[t]);try{e.data instanceof File?self.doc=await pdfjsLib.getDocument(await(e=>new Promise(t=>{const r=new FileReader;r.onloadend=(()=>{t(new Uint8Array(r.result))}),r.readAsArrayBuffer(e)}))(e.data)).promise:e.data instanceof Uint8Array?self.doc=await pdfjsLib.getDocument(e.data).promise:e.data instanceof Blob?self.doc=await pdfjsLib.getDocument(new Uint8Array(await e.data.ArrayBuffer())):"string"==typeof e.data&&(e.data.startsWith("data:")?self.doc=await pdfjsLib.getDocument((e=>{e.includes(",")&&(e=e.split(",")[1]);const t=atob(e),r=t.length,s=new Uint8Array(new ArrayBuffer(r));for(let e=0;e<r;e++)s[e]=t.charCodeAt(e);return s})(e.data)).promise:self.doc=await pdfjsLib.getDocument(e.data).promise),self.postMessage({type:"success",isPageNum:!0,result:self.doc.numPages,return:e.return})}catch(t){self.postMessage({type:"error",isPageNum:!0,result:t.message,return:e.return})}};self.addEventListener("message",t=>{const r=t.data;switch(r.type){case"init":e(r);break;case"getPageImage":self.doc?(async e=>{try{const t=await self.doc.getPage(e.data),r=t.getViewport({scale:1}),s=new OffscreenCanvas(r.width,r.height);await t.render({canvasContext:s.getContext("2d"),viewport:r}).promise,self.postMessage({type:"success",result:await s.convertToBlob({type:"image/jpeg"}),return:e.return})}catch(t){self.postMessage({type:"error",result:t.message,return:e.return})}})(r):self.postMessage({type:"error",result:"PDF Document can't load",return:r.return})}})},w=new class{constructor(){if(!(t instanceof File||t instanceof Blob||t instanceof Uint8Array||"string"==typeof t))throw new Error("file type must File or Blob or Uint8Array or string");if(void 0===e)throw new Error("Please input options data");(()=>{if(!(OffscreenCanvas&&Worker&&location.protocol.startsWith("http")))throw new Error("Can't Use");{s=URL.createObjectURL(new Blob([`(${p.toString()})()`]));let n=e.numWorkers;(!n||n<=0)&&(n=1);const a=d();o[a]=e;for(let e=0;e<n;e++){const n=new Worker(s);n.addEventListener("message",g(e)),n.postMessage({type:"init",data:t,url:[PDF_READER_MAIN_URL,PDF_WORKER_MAIN_URL],return:a}),r.push({worker:n})}f()}})()}getPageImage(e,t){if(r.length<=0)throw new Error("Can't use");const s=(()=>{let e=d();for(;o[e];)e=d();return e})();if(o[s]=e,void 0===e)throw new Error("Please input options data");r[a].worker.postMessage({type:"getPageImage",data:t,return:s}),f()}get numPages(){return n}get numWorkers(){return r.length}get numImageConverts(){return c}get pdfLoadedTime(){return l}close(){for(const e in r)r[e].worker.terminate();s&&URL.revokeObjectURL(s);for(const e in o)u(new Error("PDFReader closed"),o[e],!1)}};return w}